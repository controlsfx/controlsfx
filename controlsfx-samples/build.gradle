ext.moduleName = 'org.controlsfx.samples'

apply plugin: 'application'

applicationName = 'FXSampler'
mainClassName = 'org.controlsfx.fxsampler/fxsampler.FXSampler'

version = controlsfx_version

javafx {
    version = javafx_version
    modules = [ 'javafx.controls', 'javafx.web' ]
}

dependencies {
    implementation project(':controlsfx')
    implementation project(':fxsampler')
}

/** We need Java files as resources for showing them in Source Tab **/
processResources {
    from sourceSets.main.allJava
}

/**
 * compileJava and javadoc tasks should have controlsfx and fxsampler on module-path
 */
compileJava {
    if (!JavaVersion.current().isJava11Compatible()) {
        inputs.property("moduleName", moduleName)
        doFirst {
            options.compilerArgs += [
                    '--module-path', classpath.asPath,
            ]
            classpath = files()
        }
    }
}

javadoc {
    if (!JavaVersion.current().isJava11Compatible()) {
        doFirst {
            options.addStringOption('-module-path', classpath.asPath)
            classpath = files()
        }
    } else {
        moduleOptions {
            addModules = [
                    'org.controlsfx.controls',
                    'org.controlsfx.fxsampler'
            ]
        }
    }
}

jar {
    manifest {
        attributes  'Implementation-Title':     'ControlsFX-Samples',
                    'Implementation-Version':   project.version,
                    'Class-Path':               configurations.compileClasspath.collect { it.getName() }.join(' '),
                    'Main-Class':               mainClassName
    }
}

run {
    doFirst {
        java9Args.addAll(java9RuntimeArgs)
        jvmArgs = java9Args
    }
}