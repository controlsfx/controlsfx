ext.moduleName = 'org.controlsfx.samples'

apply plugin: 'application'

applicationName = 'FXSampler'
mainClassName = fxsampler_mainClass

javafx {
    modules = [ 'javafx.controls', 'javafx.web' ]
}

configurations {
    jdk
}

sourceSets {
    main {
        compileClasspath += configurations.jdk
        // Gradle application plugin fails to resolve resources with JDK 11
        output.resourcesDir = "build/classes/java/main"
    }
}

dependencies {
    compile project(':controlsfx')
    compile project(':fxsampler')
}

/**
 * compileJava and javadoc tasks should have controlsfx and fxsampler on module-path
 */
compileJava {
    if (!JavaVersion.current().isJava11Compatible()) {
        inputs.property("moduleName", moduleName)
        doFirst {
            options.compilerArgs += [
                    '--module-path', classpath.asPath,
            ]
            classpath = files()
        }
    }
}

javadoc {
    if (!JavaVersion.current().isJava11Compatible()) {
        doFirst {
            options.addStringOption('-module-path', classpath.asPath)
            classpath = files()
        }
    } else {
        moduleOptions {
            addModules = [
                    'org.controlsfx.controls',
                    'org.controlsfx.fxsampler'
            ]
        }
    }
}

jar {
    manifest {
        attributes  'Implementation-Title':     'ControlsFX-Samples',
                    'Implementation-Version':   project.version,
                    'Class-Path':               configurations.compile.collect { it.getName() }.join(' '),
                    'Main-Class':               fxsampler_mainClass
    }
    from sourceSets.main.allJava
}

run {
    doFirst {
        java9Args.addAll(java9RuntimeArgs)
        jvmArgs = java9Args
    }
}